# CloudShell Resource Standard 1.0.0
# TOSCA extension: tags for properties with the following values:
# tags: configuration, setting, search_filter, abstract, insight, admin_only, diagram_display

tosca_definitions_version: tosca_simple_yaml_1_0

metadata:
  template_name: CloudShell Resource Standard
  template_author: Meni Besso
  template_version: 1.0.0

description: Suitable for modeling CloudShell Shells

imports:
  - cloudshell_types: cloudshell_types_1_0_0.yaml


node_types:

# ----------------- CLOUDSHELL NODES -----------------#
  cloudshell.nodes.GenericResource:
    derived_from:  cloudshell.nodes.Shell
    capabilities:
      cloudshell_family:
        type: cloudshell.families.CS_GenericResource
# ----------------- ------------------ -----------------#


  cloudshell.nodes.Shell:
    derived_from: tosca.nodes.Root
    properties:
      user:
        description: User with administrative privileges
        type: string
      password:
        type: cloudshell.datatypes.Password
      enable_password:
        description: The enable password is required by some CLI protocols such as Telnet and is required according to the device configuration.
        type: string
      power_management:
        type: boolean
        description: Used by the power management orchestration, if enabled, to determine whether to automatically manage the device power status. Enabled by default.
      system_name:
        description: A unique identifier for the device, if exists in the device terminal/os.
        type: string
      vendor:
        description: The name of the device manufacture.
        type: string
        default: ''
        tags: [configuration, setting, abstract_filter]
      location:
        description: The device physical location identifier. For example Lab1/Floor2/Row5/Slot4.
        type: string
        default: ''
        tags: [configuration, setting, abstract_filter]
      model:
        description: The device model. This information is typically used for abstract resource filtering.
        type: string
        default: ''
        tags: [configuration, setting, abstract_filter]
      backup_location:
        description: Used by the save/restore orchestration to determine where backups should be saved.
        type: string
      sessions_concurrency_limit:
        description: The maximum number of concurrent sessions that the driver will open to the device. Default is 1 (no concurrency).
        type: integer
        default: 1
    requirements:
     - ports:
            capability: tosca.capabilities.Attachment
            node: cloudshell.resource.nodes.ResourcePort
            relationship: tosca.relationships.AttachesTo
            occurrences: [0, UNBOUNDED]
     - power_ports:
            capability: tosca.capabilities.Attachment
            node: cloudshell.resource.nodes.GenericPowerPort
            relationship: tosca.relationships.AttachesTo
            occurrences: [0, UNBOUNDED]
    capabilities:
      SNMP:
        type: cloudshell.capabilities.SNMP
      ConsoleConnection:
        type: cloudshell.capabilities.ConsoleConnection


  cloudshell.resource.nodes.GenericPowerPort:
    properties:
      model:
        description: The device model. This information is typically used for abstract resource filtering.
        type: string
        tags: [configuration, setting, abstract_filter]
      serial_number:
        type: string
      version:
        description: The firmware version of the resource.
        type: string
      port_description:
        description: The description of the port as configured in the device.
        type: string
    capabilities:
      cloudshell_family:
        type: cloudshell.families.CS_PowerPort


  cloudshell.resource.nodes.ResourcePort:
    properties:
      mac_address:
        type: string
        default: ''
      IPv4_address:
        type: string
      IPv6_address:
        type: string
      port_speed:
        description: The port speed (e.g 10Gb/s, 40Gb/s, 100Mb/s)
        type: string
    capabilities:
      cloudshell_family:
        type: cloudshell.families.CS_Port


capability_types:
  cloudshell.capabilities.AutoDiscovery:
    derived_from: tosca.capabilities.Root
    properties:
      inventory_description:
        type: string
        default: ''
      enable_auto_discovery:
        type: boolean
        default: true
      auto_discovery_description:
        type: string
        default: ''

  cloudshell.capabilities.SNMP:
    properties:
      SNMP_read_community:
        description: The SNMP Read-Only Community String is like a password. It is sent along with each SNMP Get-Request and allows (or denies) access to device.
        type: string
      SNMP_write_community:
        description: The SNMP Write Community String is like a password. It is sent along with each SNMP Set-Request and allows (or denies) chaning MIBs values.
        type: string
      SNMP_v3_user:
        description: Relevant only in case SNMP V3 is in use.
        type: string
      SNMP_v3_password:
        description: Relevant only in case SNMP V3 is in use.
        type: cloudshell.datatypes.Password
      SNMP_v3_private_key:
        description: Relevant only in case SNMP V3 is in use.
        type: string
      SNMP_version:
        type: string
        default: ''
        description: The version of SNMP to use. Possible values are v1, v2c and v3.
        constraints:
          - valid_values: [ v1, v2c, v3]
      Enable_SNMP:
        description: If set to True and SNMP isnâ€™t enabled yet in the device the Shell will automatically enable SNMP in the device when Autoload command is called. SNMP must be enabled on the device for the Autoload command to run successfully. True by default.
        type: boolean
        default: true
      Disable_SNMP:
        description: If set to True SNMP will be disabled automatically by the Shell after the Autoload command execution is completed. False by default.
        type: boolean
        default: false

  cloudshell.capabilities.ConsoleConnection:
    properties:
      console_server_IP_address:
        description: The IP address of the console server, in IPv4 format.
        type: string
      console_user:
        type: string
      console_port:
        description: The port on the console server, usually TCP port, which the device is associated with.
        type: integer
      console_password:
        type: cloudshell.datatypes.Password
      CLI_connection_type:
        type: string
        description: The CLI connection type that will be used by the driver. Possible values are Auto, Console, SSH, Telnet and TCP. If Auto is selected the driver will choose the available connection type automatically. Default value is Auto.
      CLI_TCP_port:
        description: TCP Port to user for CLI connection. If kept empty a default CLI port will be used based on the chosen protocol, for example Telnet will use port 23.
        type: string


data_types:
  cloudshell.datatypes.Password:
    derived_from: tosca.datatypes.Root
    properties:
      text:
        type: string
